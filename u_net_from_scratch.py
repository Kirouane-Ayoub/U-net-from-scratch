# -*- coding: utf-8 -*-
"""U-net from scratch.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UpzkkmvUqw1f5Y1qBTRvBe3DRpB4laCn
"""

from tensorflow.keras import layers

import tensorflow as tf

def conv_block(input , num_filters ) : 
  x = tf.keras.layers.Conv2D(num_filters , 3 , padding="same")(input)
  x = tf.keras.layers.BatchNormalization()(x)
  x = tf.keras.layers.Activation("relu")(x)

  x = tf.keras.layers.Conv2D(num_filters , 3 , padding="same")(x)
  x = tf.keras.layers.BatchNormalization()(x)
  x = tf.keras.layers.Activation("relu")(x)
  return x

def encoder(input , num_filter) : 
  s = conv_block(input , num_filter)
  p = tf.keras.layers.MaxPool2D((2,2))(s)
  return s , p

def decoder(input , skip_conn , num_filter): 
  x = tf.keras.layers.Conv2DTranspose(num_filter , (2,2) , strides=2 , padding="same")(input)
  x = tf.keras.layers.Concatenate()([x , skip_conn])
  x = conv_block(x , num_filter)
  return x

inputs = tf.keras.Input(shape=(128,128,3))

s1 , p1 = encoder(inputs ,64)
s2 , p2 = encoder(p1 , 128)
s3 , p3 = encoder(p2 , 256)
s4 , p4 = encoder(p3 , 512)

b1 = conv_block(p4 , 1024)

d1 = decoder(b1 , s4 , 512)
d2 = decoder(d1 ,s3 ,256)
d3 = decoder(d2 , s2 , 128)
d4 = decoder(d3 , s1 , 64)

outputs = tf.keras.layers.Conv2D(3,3,padding="same" , activation="sigmoid")(d4)

model = tf.keras.Model(inputs , outputs)

model.summary()

tf.keras.utils.plot_model(model , show_dtype=True , show_layer_activations=True , show_shapes=True)